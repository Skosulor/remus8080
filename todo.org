#+TITLE: Todo


* Guide
** How to implement new instruction:
1. Add enum for instruction type in /instructions.rs/
2. Match binary value of op code in function /byte_to_op/
3. set the following:
   + self.adress_mode
   + self.inst_type
   + self.byte1 (optionally)
   + self.byte2 (optionally)
   + self.name
4. create function /[name]_op/ in /i8080.rs/ which sets flags and executes OP function
5. In file /i8080.rs/ match the instruction type in function
   /execute_instruction/ and execute the newly created function for the OP
6. Remember to increment the PC correctly


** Dissasembler bindings

| Binding | name       | function                                   |
|---------+------------+--------------------------------------------|
| c       | continue   | run forever                                |
| s       | step       | stops the loaded program and take one step |
| b*      | breakpoint | Set a breakpoint and run                   |
| q       | quit       | Exit emulation                             |

*Due to a unfixed issue, type a space before typing the line number.

* General
** [ ] Refactor: Break out operations from proc
*** [ ] Break out operations from proc
*** [ ] Break out memory from proc
*** [ ] Brake out debug commands from main
*** [ ] Add tests
*** [X] Give dissasmbler sane variable & function names
** [ ] Update instruction counter based on type of instruction
** [ ] Acutally set aux flag
** [ ] Add Program counter to debugger
** [ ] Add cycle count to debugger

* Implement Op Codes
TODO Op codes needed for space invaders
** [8/8] Arithmetic
*** [X] ADD
*** [X] SUB
*** [X] SBB
*** [X] ADC
*** [X] ANA
*** [X] ORA
*** [X] XRA
*** [X] CMP
** [X] MOV
** [9/10] Immediate
*** [X] ADI
*** [X] ACI
*** [X] SBI
*** [X] SUI
*** [X] ANI
*** [X] ORI
*** [X] XRI
*** [X] CPI
*** [X] MVI
** [0/17] Misc
*** [ ] LXI
*** [ ] DCR
*** [ ] DAD
*** [ ] RRC
*** [ ] INX
*** [ ] LXI
*** [ ] STA
*** [ ] LDA
*** [ ] JNZ
*** [ ] JMP
*** [ ] PUSH
*** [ ] RET
*** [ ] CALL
*** [ ] POP
*** [ ] OUT
*** [ ] PUSH
*** [ ] XCHG
*** [ ] EI

